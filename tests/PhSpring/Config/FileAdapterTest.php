<?php
namespace PhSpring\Config;

use InvalidArgumentException;
use PHPUnit_Framework_TestCase;
use PhSpring\Config\FileAdapter;
use PhSpring\Engine\RecursiveArrayObject;
use ReflectionProperty;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-19 at 12:15:20.
 */
class FileAdapterTest extends PHPUnit_Framework_TestCase
{
    private $configIniFile;
        
    protected function setUp() {
        $this->configIniFile = PHSPRING_FIXTURES_PATH."/config.ini";
        $property = new ReflectionProperty('PhSpring\Config\FileAdapter', 'resource');
        $property->setAccessible(true);
        $property->setValue(null);
    }
    /**
     * @covers PhSpring\Config\FileAdapter::__construct
     * @test
     */
    public function constructWithExistsIni()
    {
        $config = new FileAdapter($this->configIniFile);
        $this->assertArrayHasKey('value', $config->test);
        $this->assertEquals('dummy', $config->test->value);
        
    }
    /**
     * @covers PhSpring\Config\FileAdapter::__construct
     * @test
     */
    public function constructWithExistsPhp()
    {
        new FileAdapter(PHSPRING_FIXTURES_PATH.'/config.php');
    }
    /**
     * @covers PhSpring\Config\FileAdapter::__construct
     * @test
     * @expectedException InvalidArgumentException
     */
    public function constructWithNotExistsIni()
    {
        new FileAdapter(PHSPRING_FIXTURES_PATH.'/notexists.config.ini');
    }

    /**
     * @covers PhSpring\Config\FileAdapter::__construct
     * @test
     * @expectedException InvalidArgumentException
     */
    public function constructWithNotExistsPhp()
    {
        new FileAdapter(PHSPRING_FIXTURES_PATH.'/notexists.config.php');
    }

    /**
     * @covers PhSpring\Config\FileAdapter::setResource
     * @todo   Implement testSetResource().
     */
    public function testSetResource()
    {
        FileAdapter::setResource(new RecursiveArrayObject(parse_ini_file($this->configIniFile, true, INI_SCANNER_RAW)));
    }
    
}
