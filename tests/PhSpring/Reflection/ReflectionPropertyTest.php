<?php

namespace PhSpring\Reflection;

use PHPUnit_Framework_TestCase;
use PhSpring\Annotation\Collection;
use PhSpring\Annotations\Autowired;
use PhSpring\TestFixtures\ClassInvokerFixture;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-02-20 at 08:34:19.
 */
class ReflectionPropertyTest extends PHPUnit_Framework_TestCase {

    /**
     * @var ReflectionProperty
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new ReflectionProperty(ClassInvokerFixture::class, 'singleton');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers PhSpring\Reflection\ReflectionProperty::getAnnotation
     */
    public function testGetAnnotation() {
        $annotation = $this->object->getAnnotation(Autowired::class);
        $this->assertInstanceOf(Autowired::class, $annotation);
    }

    /**
     * @covers PhSpring\Reflection\ReflectionProperty::getAnnotations
     * @todo   Implement testGetAnnotations().
     */
    public function testGetAnnotations() {
        $annotations = $this->object->getAnnotations();
        $this->assertNotEmpty($annotations);
        $this->assertInstanceOf(Autowired::class, $annotations[0]);
    }

    /**
     * @covers PhSpring\Reflection\ReflectionProperty::hasAnnotation
     */
    public function testHasAnnotation() {
        $annotation = $this->object->hasAnnotation(Autowired::class);
        $this->assertTrue($annotation);
    }

    /**
     * @covers PhSpring\Reflection\ReflectionProperty::getDeclaringClass
     */
    public function testGetDeclaringClass() {
        $class = $this->object->getDeclaringClass();
        $this->assertInstanceOf(ReflectionClass::class, $class);
    }

}
