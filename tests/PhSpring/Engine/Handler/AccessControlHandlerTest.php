<?php

namespace PhSpring\Engine\Handler;

use PhSpring\Annotations\AccessControl;
use PhSpring\TestFixtures\AccessControlFixture;
use PhSpring\Engine\IACLResource;
use PhSpring\Engine\IAuth;
use PhSpring\Reflection\ReflectionMethod;
use ReflectionProperty;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.1 on 2014-01-24 at 14:37:00.
 */
class AccessControlHandlerTest extends \PHPUnit_Framework_TestCase {

    const DEFAULT_ROLE = "*test*";
    const GUEST_ROLE = "guest";

    /**
     * @var AccessControlHandler
     */
    protected $handler;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->authMock = $this->getMock(IAuth::class);
        $this->resourceMock = $this->getMock(IACLResource::class, array('isAllowed'));
        $this->handler = new AccessControlHandler($this->authMock, $this->resourceMock);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers PhSpring\Engine\Handler\AccessControlHandler::setDefaultRole
     */
    public function testSetDefaultRole() {
        $ref = new ReflectionProperty(AccessControlHandler::class, 'defaultRole');
        $ref->setAccessible(true);
        $ref->setValue(self::DEFAULT_ROLE);
        AccessControlHandler::setDefaultRole(self::GUEST_ROLE);
        $this->assertTrue($ref->getValue() === self::GUEST_ROLE);
    }

    /**
     * @covers PhSpring\Engine\Handler\AccessControlHandler::run
     * @test
     */
    public function accessAllowed() {
        $fixture = new AccessControlFixture();

        $this->resourceMock->expects($this->any())
                ->method('isAllowed')
                ->will($this->returnValue(TRUE));
        $this->handler->run(new ReflectionMethod(AccessControlFixture::class, 'test'), $fixture);
    }

    /**
     * @covers PhSpring\Engine\Handler\AccessControlHandler::run
     * @test
     * @expectedException PhSpring\Engine\Exceptions\UnAuthorizedException
     */
    public function accessNotAllowed() {
        $fixture = new AccessControlFixture();

        $this->resourceMock->expects($this->any())
                ->method('isAllowed')
                ->will($this->returnValue(FALSE));
        $this->handler->run(new ReflectionMethod(AccessControlFixture::class, 'test'), $fixture);
    }

}
